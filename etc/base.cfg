[buildout]
# lxml requirements - apt-get install libxml2-dev libxslt1-dev
parts =
    lxml
    agx
    test
    coverage
    coveragereport
    pyagx

find-links =
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

extensions = 
    mr.developer

index = http://pypi.bluedynamics.eu/

sources = sources
sources-dir = ${buildout:directory}/devsrc
auto-checkout = *
always-checkout = force

develop = .

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

[agx]
recipe = zc.recipe.egg:scripts
eggs =
    ${lxml:egg}
    agx.dev

[pyagx]
recipe = zc.recipe.egg
eggs =
    ${agx:eggs}
interpreter = pyagx

[test]
recipe = zc.recipe.testrunner
eggs =
    odict[test]
    plumber[test]
    node.ext.python[test]
    node.ext.template[test]
    node.ext.directory[test]
    node.ext.xml[test]
    node.ext.uml[test]
    node.ext.zcml[test]
    node.ext.xmi[test]
    agx.core[test]
    agx.transform.xmi2uml[test]
    agx.transform.uml2fs[test]
    agx.generator.uml[test]
    agx.generator.pyegg[test]
    agx.generator.zca[test]
    agx.generator.sql[test]
    agx.generator.plone[test]
    agx.generator.buildout[test]
    agx.generator.dexterity[test]
    agx.dev[test]
    node[test]

defaults = ['--auto-color', '--auto-progress']

[coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ./bin/test --coverage ../../coverage -v --auto-progress "$@"
output = ${buildout:directory}/bin/coverage
mode = 755

[coveragereport]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport=coveragereport
arguments = sys.argv[1:] or ['${buildout:directory}/parts/coverage', '${buildout:directory}/parts/coverage/report']