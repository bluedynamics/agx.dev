[buildout]

parts =
    lxml
    agx
    test
    testzodict
    testcore
    testiopython
    testiotemplate
    testiodirectory
    testioxml
    testioxmi
    testiouml
    testiozcml
    testtransformuml2fs
    testtransformxmi2uml
    testgenuml
    testgenpyegg
    testgenzca
    pyagx
    omelette

develop = 
    .
    devsrc/agx.core
    devsrc/agx.generator.uml
    devsrc/agx.generator.pyegg
    devsrc/agx.generator.zca
    devsrc/agx.io.python
    devsrc/agx.io.directory
    devsrc/agx.io.template
    devsrc/agx.io.uml
    devsrc/agx.io.xml
    devsrc/agx.io.xmi
    devsrc/agx.io.zcml
    devsrc/agx.transform.uml2fs
    devsrc/agx.transform.xmi2uml
    devsrc/zodict
    devsrc/odict
    devsrc/collective.sphinx.includedoc

unzip = true

extensions =
    mr.developer>=1.14

find-links =
    http://dist.plone.org
    http://download.zope.org/ppix/
    http://download.zope.org/distribution/
    http://effbot.org/downloads

sources = sources
sources-dir = ${buildout:directory}/devsrc
always-checkout = true
auto-checkout = *

[sources]
odict                        = svn https://svn.plone.org/svn/archetypes/AGX/odict/trunk
zodict                       = svn https://svn.plone.org/svn/archetypes/AGX/zodict/trunk
agx.core                     = svn https://svn.plone.org/svn/archetypes/AGX/agx.core/trunk
agx.io.python                = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.python/trunk
agx.io.template              = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.template/trunk
agx.io.directory             = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.directory/trunk
agx.io.xml                   = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.xml/trunk
agx.io.uml                   = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.uml/trunk
agx.io.zcml                  = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.zcml/trunk
agx.io.xmi                   = svn https://svn.plone.org/svn/archetypes/AGX/agx.io.xmi/trunk
agx.transform.xmi2uml        = svn https://svn.plone.org/svn/archetypes/AGX/agx.transform.xmi2uml/trunk
agx.transform.uml2fs         = svn https://svn.plone.org/svn/archetypes/AGX/agx.transform.uml2fs/trunk
agx.generator.uml            = svn https://svn.plone.org/svn/archetypes/AGX/agx.generator.uml/trunk
agx.generator.pyegg          = svn https://svn.plone.org/svn/archetypes/AGX/agx.generator.pyegg/trunk
agx.generator.zca            = svn https://svn.plone.org/svn/archetypes/AGX/agx.generator.zca/trunk
agx.sphinx                   = svn https://svn.plone.org/svn/archetypes/AGX/agx.sphinx/trunk/
collective.sphinx.includedoc = svn https://svn.plone.org/svn/collective/collective.sphinx.includedoc/trunk/

[lxml]
recipe = z3c.recipe.staticlxml
egg = lxml

[agx]
recipe = zc.recipe.egg:scripts
eggs =
    ${lxml:egg}
    agx.flavour.dev

[test]
recipe = zc.recipe.testrunner
eggs =
    agx.flavour.dev[test]

[testzodict]
recipe = zc.recipe.testrunner
eggs =
    zodict[test]

[testcore]
recipe = zc.recipe.testrunner
eggs =
    agx.core[test]

[testiopython]
recipe = zc.recipe.testrunner
eggs =
    agx.io.python[test]

[testiotemplate]
recipe = zc.recipe.testrunner
eggs =
    agx.io.template[test]

[testiodirectory]
recipe = zc.recipe.testrunner
eggs =
    agx.io.directory[test]

[testioxml]
recipe = zc.recipe.testrunner
eggs =
    agx.io.xml[test]

[testioxmi]
recipe = zc.recipe.testrunner
eggs =
    agx.io.xmi[test]

[testiouml]
recipe = zc.recipe.testrunner
eggs =
    agx.io.uml[test]

[testiozcml]
recipe = zc.recipe.testrunner
eggs =
    agx.io.zcml[test]

[testtransformxmi2uml]
recipe = zc.recipe.testrunner
eggs =
    agx.transform.xmi2uml[test]

[testtransformuml2fs]
recipe = zc.recipe.testrunner
eggs =
    agx.transform.uml2fs[test]

[testgenuml]
recipe = zc.recipe.testrunner
eggs =
    agx.generator.uml[test]

[testgenpyegg]
recipe = zc.recipe.testrunner
eggs =
    agx.generator.pyegg[test]

[testgenzca]
recipe = zc.recipe.testrunner
eggs =
    agx.generator.zca[test]

[pyagx]
recipe = zc.recipe.egg
eggs =
    ${agx:eggs}
interpreter = pyagx

[omelette]
recipe = collective.recipe.omelette
eggs =
    ${agx:eggs}