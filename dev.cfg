[buildout]
extends = etc/base.cfg

parts +=
    test
    coverage
    coveragereport

extensions = 
    mr.developer

sources = sources
sources-dir = ${buildout:directory}/devsrc
auto-checkout = *
always-checkout = force

[remotes]
bda = git://github.com/bluedynamics
bda_push = git@github.com:bluedynamics

[sources]
odict                   = git ${remotes:bda}/odict.git                   pushurl=${remotes:bda_push}/odict.git
plumber                 = git ${remotes:bda}/plumber.git                 pushurl=${remotes:bda_push}/plumber.git
node                    = git ${remotes:bda}/node.git                    pushurl=${remotes:bda_push}/node.git
node.ext.python         = git ${remotes:bda}/node.ext.python.git         pushurl=${remotes:bda_push}/node.ext.python.git
node.ext.template       = git ${remotes:bda}/node.ext.template.git       pushurl=${remotes:bda_push}/node.ext.template.git
node.ext.directory      = git ${remotes:bda}/node.ext.directory.git      pushurl=${remotes:bda_push}/node.ext.directory.git
node.ext.xml            = git ${remotes:bda}/node.ext.xml.git            pushurl=${remotes:bda_push}/node.ext.xml.git
node.ext.uml            = git ${remotes:bda}/node.ext.uml.git            pushurl=${remotes:bda_push}/node.ext.uml.git
node.ext.zcml           = git ${remotes:bda}/node.ext.zcml.git           pushurl=${remotes:bda_push}/node.ext.zcml.git
node.ext.xmi            = git ${remotes:bda}/node.ext.xmi.git            pushurl=${remotes:bda_push}/node.ext.xmi.git
agx.core                = git ${remotes:bda}/agx.core.git                pushurl=${remotes:bda_push}/agx.core.git
agx.transform.xmi2uml   = git ${remotes:bda}/agx.transform.xmi2uml.git   pushurl=${remotes:bda_push}/agx.transform.xmi2uml.git
agx.transform.uml2fs    = git ${remotes:bda}/agx.transform.uml2fs.git    pushurl=${remotes:bda_push}/agx.transform.uml2fs.git
agx.generator.uml       = git ${remotes:bda}/agx.generator.uml.git       pushurl=${remotes:bda_push}/agx.generator.uml.git
agx.generator.pyegg     = git ${remotes:bda}/agx.generator.pyegg.git     pushurl=${remotes:bda_push}/agx.generator.pyegg.git
agx.generator.zca       = git ${remotes:bda}/agx.generator.zca.git       pushurl=${remotes:bda_push}/agx.generator.zca.git
agx.generator.buildout  = git ${remotes:bda}/agx.generator.buildout.git  pushurl=${remotes:bda_push}/agx.generator.buildout.git
agx.generator.plone     = git ${remotes:bda}/agx.generator.plone.git     pushurl=${remotes:bda_push}/agx.generator.plone.git
agx.generator.dexterity = git ${remotes:bda}/agx.generator.dexterity.git pushurl=${remotes:bda_push}/agx.generator.dexterity.git
agx.generator.sql       = git ${remotes:bda}/agx.generator.sql.git       pushurl=${remotes:bda_push}/agx.generator.sql.git
agx.generator.generator = git ${remotes:bda}/agx.generator.generator.git pushurl=${remotes:bda_push}/agx.generator.generator.git

[test]
recipe = zc.recipe.testrunner
eggs =
    odict[test]
    plumber[test]
    node.ext.python[test]
    node.ext.template[test]
    node.ext.directory[test]
    node.ext.xml[test]
    node.ext.uml[test]
    node.ext.zcml[test]
    node.ext.xmi[test]
    agx.transform.xmi2uml[test]
    agx.transform.uml2fs[test]
    agx.generator.uml[test]
    agx.generator.pyegg[test]
    agx.generator.zca[test]
    agx.generator.sql[test]
    agx.generator.plone[test]
    agx.generator.buildout[test]
    agx.generator.dexterity[test]
    agx.generator.generator[test]
    agx.core[test]
    node[test]
defaults = ['--auto-color', '--auto-progress']

[coverage]
recipe = collective.recipe.template
input = inline:
    #!/bin/sh
    ./bin/test --coverage ../../coverage -v --auto-progress "$@"
output = ${buildout:directory}/bin/coverage
mode = 755

[coveragereport]
recipe = zc.recipe.egg
eggs = z3c.coverage
scripts = coveragereport=coveragereport
arguments = sys.argv[1:] or ['${buildout:directory}/parts/coverage', '${buildout:directory}/parts/coverage/report']
